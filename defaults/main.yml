---
## General
grafana_version: 4.6.0

grafana_user: grafana
grafana_group: grafana
grafana_conf_dir: /etc/grafana

grafana_plugins:
  - grafana-clock-panel

# grafana ini variables
# see http://docs.grafana.org/installation/configuration/ for more details
grafana_ini_general: |
  app_mode = production
  instance_name = {{ ansible_fqdn }}
grafana_ini_paths: |
  data = /var/lib/grafana
  logs = /var/log/grafana
  plugins = /var/lib/grafana/plugins
grafana_ini_server: |
  # Protocol (http, https, socket)
  protocol = http
  # The ip address to bind to, empty will bind to all interfaces
  ;http_addr = 
  http_port = 3000
  # The public facing domain name used to access grafana from a browser
  domain = localhost
  # Redirect to correct domain if host header does not match domain
  # Prevents DNS rebinding attacks
  enforce_domain = false
  # The full public facing url you use in browser, used for redirects and emails
  # If you use reverse proxy and sub path specify full url (with sub path)
  root_url = http://localhost:3000
  # enable gzip
  enable_gzip = false
grafana_ini_database: |
  # You can configure the database connection by specifying type, host, name, user and password
  # as seperate properties or as on string using the url propertie.
  # Either "mysql", "postgres" or "sqlite3", it's your choice
  ;type = sqlite3
  # For "sqlite3" only, path relative to data_path setting
  ;path = grafana.db
  ;host = 127.0.0.1:3306
  ;name = grafana
  ;user = root
  # If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
  ;password =
  # Use either URL or the previous fields to configure the database
  # Example: mysql://user:secret@host:port/database
  ;url =
  # For "postgres" only, either "disable", "require" or "verify-full"
  ;ssl_mode = disable
  # Max idle conn setting default is 2
  ;max_idle_conn = 2
  # Max conn setting default is 0 (mean not set)
  ;max_open_conn =
grafana_ini_session: ""
grafana_ini_dataproxy: ""
grafana_ini_analytics: |
  check_for_updates = true
grafana_ini_security: |
  # default admin user, created on startup
  ;admin_user = admin
  # default admin password, can be changed before first start of grafana,  or in profile settings
  ;admin_password = admin
  # used for signing
  ;secret_key = SW2YcwTIb9zpOOhoPsMm
  # Auto-login remember days
  ;login_remember_days = 7
  ;cookie_username = grafana_user
  ;cookie_remember_name = grafana_remember
  # disable gravatar profile images
  ;disable_gravatar = false
  # data source proxy whitelist (ip_or_domain:port separated by spaces)
  ;data_source_proxy_whitelist =
grafana_ini_snapshots: ""
grafana_ini_users: |
  # disable user signup / registration
  allow_sign_up = true
  # Allow non admin users to create organizations
  allow_org_create = true
  # Set to true to automatically assign new users to the default organization (id 1)
  auto_assign_org = true
  # Default role new users will be automatically assigned (if disabled above is set to true)
  auto_assign_org_role = Viewer
  # Background text for the user field on the login page
  login_hint = email or username
  # Default UI theme ("dark" or "light")
  default_theme = dark
  # External user management, these options affect the organization users view
  ;external_manage_link_url =
  ;external_manage_link_name =
  ;external_manage_info =
grafana_ini_auth: ""
grafana_ini_auth_anonymous: ""
grafana_ini_auth_github: ""
grafana_ini_auth_google: ""
grafana_ini_auth_generic_oauth: ""
grafana_ini_auth_grafana_com: ""
grafana_ini_auth_proxy: ""
grafana_ini_auth_basic: ""
grafana_ini_auth_ldap: |
  enabled = false
  config_file = /etc/grafana/ldap.toml
  allow_sign_up = true
grafana_ini_smtp: |
  ;enabled = false
  ;host = localhost:25
  ;user =
  # If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
  ;password =
  ;cert_file =
  ;key_file =
  ;skip_verify = false
  ;from_address = admin@grafana.localhost
  ;from_name = Grafana
  # EHLO identity in SMTP dialog (defaults to instance_name)
  ;ehlo_identity = dashboard.example.com
grafana_ini_emails: ""
grafana_ini_log: ""
grafana_ini_log_console: ""
grafana_ini_log_file: ""
grafana_ini_log_syslog: ""
grafana_ini_event_publisher: ""
grafana_ini_dashboards_json: |
  ;enabled = false
  ;path = /var/lib/grafana/dashboards
grafana_ini_alerting: ""
grafana_ini_metrics: ""
grafana_ini_metrics_graphite: ""
grafana_ini_jaeger: ""
grafana_ini_grafana_com: ""
grafana_ini_external_image_storage: ""
grafana_ini_external_image_storage_s3: ""
grafana_ini_external_image_storage_webdav: ""
grafana_ini_external_image_storage_gcs: ""

# ldap.toml variables
# See http://docs.grafana.org/installation/ldap/ for more details
grafana_ldap_servers: |
  # Ldap server host (specify multiple hosts space separated)
  host = "127.0.0.1"
  # Default port is 389 or 636 if use_ssl = true
  port = 389
  # Set to true if ldap server supports TLS
  use_ssl = false
  # set to true if you want to skip ssl cert validation
  ssl_skip_verify = false
  # set to the path to your root CA certificate or leave unset to use system defaults
  # root_ca_cert = /path/to/certificate.crt
  # Search user bind dn
  bind_dn = "cn=admin,dc=grafana,dc=org"
  # Search user bind password
  # If the password contains # or ; you have to wrap it with trippel quotes. Ex """#password;"""
  bind_password = 'grafana'
  # User search filter, for example "(cn=%s)" or "(sAMAccountName=%s)" or "(uid=%s)"
  search_filter = "(cn=%s)"
  # An array of base dns to search through
  search_base_dns = ["dc=grafana,dc=org"]
  # Users with nested/recursive group membership and an LDAP server that supports LDAP_MATCHING_RULE_IN_CHAIN
  # can set group_search_filter, group_search_filter_user_attribute, group_search_base_dns and member_of
  # below in such a way that the user's recursive group membership is considered.
  #
  # Nested Groups + Active Directory (AD) Example:
  #
  #   AD groups store the Distinguished Names (DNs) of members, so your filter must
  #   recursively search your groups for the authenticating user's DN. For example:
  #
  #     group_search_filter = "(member:1.2.840.113556.1.4.1941:=%s)"
  #     group_search_filter_user_attribute = "distinguishedName"
  #     group_search_base_dns = ["ou=groups,dc=grafana,dc=org"]
  #
  #     [servers.attributes]
  #     ...
  #     member_of = "distinguishedName"
grafana_ldap_servers_attributes: |
  # Specify names of the ldap attributes your ldap uses
  name = "givenName"
  surname = "sn"
  username = "cn"
  member_of = "memberOf"
  email =  "email"

# The Grafana organization database id (org_id). The default org is (id 1)
grafana_ldap_group_mapping:
  - { group_dn: "cn=admins,dc=grafana,dc=org",
      org_role: "Admin",
      org_id: 1
    }
  - { group_dn: "cn=users,dc=grafana,dc=org",
      org_role: "Editor",
      org_id: 1
    }
  - { group_dn: "*",
      org_role: "Viewer",
      org_id: 1
    }
